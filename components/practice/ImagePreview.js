import { Ionicons } from "@expo/vector-icons";
import * as Sharing from "expo-sharing";
import React, { useRef, useState } from "react";
import {
  Alert,
  Modal,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from "react-native";
import { useSafeAreaInsets } from "react-native-safe-area-context";
import { captureRef } from "react-native-view-shot";

const ImagePreview = ({ visible, onClose }) => {
  const insets = useSafeAreaInsets();
  const [isSharing, setIsSharing] = useState(false);
  const [isLayoutReady, setIsLayoutReady] = useState(false);
  const imageRef = useRef();

  const handleShare = async () => {
    try {
      setIsSharing(true);

      if (!isLayoutReady) {
        Alert.alert("–û—à–∏–±–∫–∞", "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
        setIsSharing(false);
        return;
      }

      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
      await new Promise((resolve) => setTimeout(resolve, 200));

      // –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≤—ã—Å–æ–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏—è–º–∏
      const uri = await captureRef(imageRef, {
        format: "png",
        quality: 1.0,
        result: "tmpfile",
        pixelRatio: 3, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
      });

      // –î–µ–ª–∏–º—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
      if (await Sharing.isAvailableAsync()) {
        await Sharing.shareAsync(`file://${uri}`, {
          mimeType: "image/png",
          dialogTitle: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º",
        });
      } else {
        Alert.alert("–£—Å–ø–µ—Ö", "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ");
      }

      setIsSharing(false);
    } catch (error) {
      console.error("Share error:", error);
      Alert.alert("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º");
      setIsSharing(false);
    }
  };

  return (
    <Modal
      visible={visible}
      animationType="fade"
      presentationStyle="overFullScreen"
      transparent={false}
    >
      <View style={[styles.container, { paddingTop: insets.top }]}>
        {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
        <TouchableOpacity style={styles.closeButton} onPress={onClose}>
          <Ionicons name="close" size={28} color="#fff" />
        </TouchableOpacity>

        {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
        <View
          ref={imageRef}
          style={styles.imageContainer}
          collapsable={false}
          onLayout={() => setIsLayoutReady(true)}
        >
          <View style={styles.content}>
            <Text style={styles.helloText}>Hello World</Text>
            <Text style={styles.subtitle}>–≠–∫—Å–ø–æ—Ä—Ç –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Horosho</Text>
            <View style={styles.decorativeElement}>
              <Text style={styles.emoji}>üéâ</Text>
            </View>
          </View>
        </View>

        {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è - –æ–±—ã—á–Ω–∞—è, —è—Ä–∫–∞—è */}
        <View
          style={[
            styles.footer,
            { paddingBottom: Math.max(insets.bottom, 20) },
          ]}
        >
          <TouchableOpacity
            style={[
              styles.shareButton,
              isSharing && styles.shareButtonDisabled,
            ]}
            onPress={handleShare}
            disabled={isSharing}
          >
            <Ionicons
              name="share"
              size={24}
              color="#fff"
              style={styles.buttonIcon}
            />
            <Text style={styles.shareButtonText}>
              {isSharing ? "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞..." : "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"}
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </Modal>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#f5f5f5",
  },
  closeButton: {
    position: "absolute",
    top: 60,
    right: 20,
    zIndex: 10,
    backgroundColor: "rgba(0, 0, 0, 0.6)",
    borderRadius: 20,
    padding: 8,
  },
  imageContainer: {
    flex: 1,
    backgroundColor: "#ffffff",
    margin: 20,
    borderRadius: 16,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.15,
    shadowRadius: 8,
    elevation: 8,
  },
  content: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    padding: 40,
  },
  helloText: {
    fontSize: 48,
    fontWeight: "bold",
    color: "#ff3b30",
    textAlign: "center",
    marginBottom: 20,
  },
  subtitle: {
    fontSize: 18,
    color: "#666",
    textAlign: "center",
    marginBottom: 30,
    fontStyle: "italic",
  },
  decorativeElement: {
    marginTop: 20,
  },
  emoji: {
    fontSize: 64,
    textAlign: "center",
  },
  footer: {
    padding: 20,
  },
  shareButton: {
    backgroundColor: "#ff3b30", // –û–±—ã—á–Ω–∞—è —è—Ä–∫–∞—è –∫–Ω–æ–ø–∫–∞ (–Ω–µ –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è)
    borderRadius: 16,
    paddingVertical: 18,
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center",
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 3 },
    shadowOpacity: 0.25,
    shadowRadius: 5,
    elevation: 5,
  },
  shareButtonDisabled: {
    backgroundColor: "rgba(255, 59, 48, 0.6)",
  },
  buttonIcon: {
    marginRight: 8,
  },
  shareButtonText: {
    color: "#fff",
    fontSize: 18,
    fontWeight: "700",
    letterSpacing: 0.5,
  },
});

export default ImagePreview;
